

Easy
````

ambig_fname
~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Ambiguous distance restraints filename
| *short description*: Filename of the ambiguous distance restraints file
| *long description*: Filename of the ambiguous distance restraints file. By default 50% of those restraints will be randomly discared. This can be changed/turned off and is controlled by the randremoval and npart parameters. Note that this file can contain both ambiguous and unambiguous restraints.
| *group*: distance restraints
| *explevel*: easy

elecflag
~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Include electrostatics energy
| *short description*: Include electrostatics energy during the calculations.
| *long description*: Include electrostatics energy during the calculations. If set to false electrostatics will not be considered.
| *group*: force field
| *explevel*: easy

hbond_fname
~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: H-bond restraints filename
| *short description*: Filename of the hydrogen bond distance restraints file
| *long description*: Filename of the hydrogen bond distance restraints file. Note that this file can contain any type of distance restraints.
| *group*: distance restraints
| *explevel*: easy

mol_shape_1
~~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Is the molecule a shape?
| *short description*: Defines a molecule as a shape.
| *long description*: Defines a molecule as a shape, which is a collection of beads.
| *group*: molecule
| *explevel*: easy

randorien
~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: No title yet
| *short description*: No short description yet
| *long description*: No long description yet
| *group*: sampling
| *explevel*: easy

sampling
~~~~~~~~

| *default*: 1000
| *type*: integer
| *title*: Number of models to generate
| *min*: 1
| *max*: 50000
| *short description*: Number of rigidbody docking models to generate
| *long description*: Number of rigidbody docking models to generate
| *group*: sampling
| *explevel*: easy

unambig_fname
~~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Unambiguous restraints filename
| *short description*: Filename of the unambiguous distance restraints file
| *long description*: Filename of the unambiguous distance restraints file. All restraints in that file will be used. Note that this file can contain both ambiguous and unambiguous restraints.
| *group*: distance restraints
| *explevel*: easy


Expert
``````

ambig_scale
~~~~~~~~~~~

| *default*: 50
| *type*: integer
| *title*: Force constant for ambiguous distance restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the distance restraints defined in ambig_fname.
| *long description*: Force constant applied to the distance restraints defined in ambig_fname.
| *group*: distance restraints
| *explevel*: expert

c2sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first C2 symmetry segment
| *long description*: Residue number of last residue in the first C2 symmetry segment
| *group*: symmetry
| *explevel*: expert

c2sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second C2 symmetry segment
| *long description*: Residue number of last residue in the second C2 symmetry segment
| *group*: symmetry
| *explevel*: expert

c2sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first C2 segment
| *short description*: Segment ID of first C2 segment
| *long description*: Segment ID of first C2 segment
| *group*: symmetry
| *explevel*: expert

c2sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second C2 segment
| *short description*: Segment ID of second C2 segment
| *long description*: Segment ID of second C2 segment
| *group*: symmetry
| *explevel*: expert

c2sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first C2 symmetry segment
| *long description*: Residue number of first residue in the first C2 symmetry segment
| *group*: symmetry
| *explevel*: expert

c2sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second C2 symmetry segment
| *long description*: Residue number of first residue in the second C2 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first C3 symmetry segment
| *long description*: Residue number of last residue in the first C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second C3 symmetry segment
| *long description*: Residue number of last residue in the second C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_end3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the third C3 symmetry segment
| *long description*: Residue number of last residue in the third C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first C3 segment
| *short description*: Segment ID of first C3 segment
| *long description*: Segment ID of first C3 segment
| *group*: symmetry
| *explevel*: expert

c3sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second C3 segment
| *short description*: Segment ID of second C3 segment
| *long description*: Segment ID of second C3 segment
| *group*: symmetry
| *explevel*: expert

c3sym_seg3_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of third C3 segment
| *short description*: Segment ID of third C3 segment
| *long description*: Segment ID of third C3 segment
| *group*: symmetry
| *explevel*: expert

c3sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first C3 symmetry segment
| *long description*: Residue number of first residue in the first C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second C3 symmetry segment
| *long description*: Residue number of first residue in the second C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c3sym_sta3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the third C3 symmetry segment
| *long description*: Residue number of first residue in the third C3 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first C4 symmetry segment
| *long description*: Residue number of last residue in the first C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second C4 symmetry segment
| *long description*: Residue number of last residue in the second C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_end3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the third C4 symmetry segment
| *long description*: Residue number of last residue in the third C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_end4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the fourth C4 symmetry segment
| *long description*: Residue number of last residue in the fourth C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first C4 segment
| *short description*: Segment ID of first C4 segment
| *long description*: Segment ID of first C4 segment
| *group*: symmetry
| *explevel*: expert

c4sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second C4 segment
| *short description*: Segment ID of second C4 segment
| *long description*: Segment ID of second C4 segment
| *group*: symmetry
| *explevel*: expert

c4sym_seg3_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of third C4 segment
| *short description*: Segment ID of third C4 segment
| *long description*: Segment ID of third C4 segment
| *group*: symmetry
| *explevel*: expert

c4sym_seg4_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of fourth C4 segment
| *short description*: Segment ID of fourth C4 segment
| *long description*: Segment ID of fourth C4 segment
| *group*: symmetry
| *explevel*: expert

c4sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first C4 symmetry segment
| *long description*: Residue number of first residue in the first C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second C4 symmetry segment
| *long description*: Residue number of first residue in the second C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_sta3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the third C4 symmetry segment
| *long description*: Residue number of first residue in the third C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c4sym_sta4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the fourth C4 symmetry segment
| *long description*: Residue number of first residue in the fourth C4 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first C5 symmetry segment
| *long description*: Residue number of last residue in the first C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second C5 symmetry segment
| *long description*: Residue number of last residue in the second C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_end3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the third C5 symmetry segment
| *long description*: Residue number of last residue in the third C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_end4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the fourth C5 symmetry segment
| *long description*: Residue number of last residue in the fourth C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_end5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the fifth C5 symmetry segment
| *long description*: Residue number of last residue in the fifth C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first C5 segment
| *short description*: Segment ID of first C5 segment
| *long description*: Segment ID of first C5 segment
| *group*: symmetry
| *explevel*: expert

c5sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second C5 segment
| *short description*: Segment ID of second C5 segment
| *long description*: Segment ID of second C5 segment
| *group*: symmetry
| *explevel*: expert

c5sym_seg3_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of third C5 segment
| *short description*: Segment ID of third C5 segment
| *long description*: Segment ID of third C5 segment
| *group*: symmetry
| *explevel*: expert

c5sym_seg4_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of fourth C5 segment
| *short description*: Segment ID of fourth C5 segment
| *long description*: Segment ID of fourth C5 segment
| *group*: symmetry
| *explevel*: expert

c5sym_seg5_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of fifth C5 segment
| *short description*: Segment ID of fifth C5 segment
| *long description*: Segment ID of fifth C5 segment
| *group*: symmetry
| *explevel*: expert

c5sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first C5 symmetry segment
| *long description*: Residue number of first residue in the first C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second C5 symmetry segment
| *long description*: Residue number of first residue in the second C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_sta3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the third C5 symmetry segment
| *long description*: Residue number of first residue in the third C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_sta4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the fourth C5 symmetry segment
| *long description*: Residue number of first residue in the fourth C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c5sym_sta5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the fifth C5 symmetry segment
| *long description*: Residue number of first residue in the fifth C5 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first C6 symmetry segment
| *long description*: Residue number of last residue in the first C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second C6 symmetry segment
| *long description*: Residue number of last residue in the second C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the third C6 symmetry segment
| *long description*: Residue number of last residue in the third C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the fourth C6 symmetry segment
| *long description*: Residue number of last residue in the fourth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the fifth C6 symmetry segment
| *long description*: Residue number of last residue in the fifth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_end6_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the sixth C6 symmetry segment
| *long description*: Residue number of last residue in the sixth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first C6 segment
| *short description*: Segment ID of first C6 segment
| *long description*: Segment ID of first C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second C6 segment
| *short description*: Segment ID of second C6 segment
| *long description*: Segment ID of second C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg3_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of third C6 segment
| *short description*: Segment ID of third C6 segment
| *long description*: Segment ID of third C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg4_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of fourth C6 segment
| *short description*: Segment ID of fourth C6 segment
| *long description*: Segment ID of fourth C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg5_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of fifth C6 segment
| *short description*: Segment ID of fifth C6 segment
| *long description*: Segment ID of fifth C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_seg6_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of sixth C6 segment
| *short description*: Segment ID of sixth C6 segment
| *long description*: Segment ID of sixth C6 segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first C6 symmetry segment
| *long description*: Residue number of first residue in the first C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second C6 symmetry segment
| *long description*: Residue number of first residue in the second C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the third C6 symmetry segment
| *long description*: Residue number of first residue in the third C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the fourth C6 symmetry segment
| *long description*: Residue number of first residue in the fourth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the fifth C6 symmetry segment
| *long description*: Residue number of first residue in the fifth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

c6sym_sta6_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the sixth C6 symmetry segment
| *long description*: Residue number of first residue in the sixth C6 symmetry segment
| *group*: symmetry
| *explevel*: expert

cmrest
~~~~~~

| *default*: False
| *type*: boolean
| *title*: Center of mass restraints
| *short description*: Automatically defines distance restraints between the geometric center of the various molecules.
| *long description*: When turned on, this option will automatically define center of mass restraints between the various molecules. This allows HADDOCK to operate in ab-initio mode in the absence of any other restraints. But those restraints can also be combined with other restraints to ensure more compact solutions. The distance restraints are defined between the geometrical centers of the various molecules (calculated on CA atoms for proteins (BB in case of Martini coarse-grained molecules) and N1 atoms for nucleic acids. For small ligands, all atoms will be used to define the geometric center. The upper limit distance is automatically calculated based on the dimension of the molecules (see cmtight description).
| *group*: ab initio mode
| *explevel*: expert

cmtight
~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Center of mass restraint tightness
| *short description*: Defines the upper distance limit based on the sum of the average dimension of the two molecule, if cmtight=false all three dimensions are used, if set to true the shortest two only are used, resulting in tighter distance restraints.
| *long description*: This parameter controls how the upper limit distance is defined for the center of mass restraints between molecules. Each molecule is oriented along its principle components and the x,y and z dimensions are calculated. If cmtight=true, the molecule distance (size) is set to the average of its smallest two half dimensions. If cmtight=false, the molecule distance (size) is set to the average of its three half dimensions.. In case of DNA or small ligands the molecule distance (size) is set to 0. The effective upper distance limit for the center or mass distance restraint is the sum of the two molecule distances.
| *group*: ab initio mode
| *explevel*: expert

crossdock
~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Cross docking of starting ensembles
| *short description*: In case ensembles of starting structures are provided, if set to true, takes all possible combinations for the docking.
| *long description*: This variable controls on starting models are combined in case ensembles of starting structures are provided. If set to true, all possible combinations of starting models will be used for the docking. If set to false, the first model from molecule1 will be combined with the first model from molecule2 and so on.
| *group*: sampling
| *explevel*: expert

dielec
~~~~~~

| *default*: 'rdie'
| *type*: string
| *title*: Constant (cdie) or distance-dependent dielectric (rdie) constant.
| *choices*: ['cdie', 'rdie']
| *short description*: Use a constant (cdie option) or a distance-dependent dielectric (rdie) constant in the Coulomb potential.
| *long description*: Use a constant (cdie option) or a distance-dependent dielectric (rdie) constant in the Coulomb potential. A distance dependent dielectric constant will effectively scale down the electrostatic energy by having a 1/r**2 dependency instead of 1/r
| *group*: force field
| *explevel*: expert

epsilon
~~~~~~~

| *default*: 10.0
| *type*: float
| *title*: Dielectric constant
| *min*: 1
| *max*: 78
| *short description*: Dielectric constant for the electrostatic Coulomb energy term.
| *long description*: Dielectric constant for the electrostatic Coulomb energy term.
| *group*: force field
| *explevel*: expert

hbond_scale
~~~~~~~~~~~

| *default*: 50
| *type*: integer
| *title*: Force constant for hbonds distance restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the distance restraints defined in hbond_fname.
| *long description*: Force constant applied to the distance restraints defined in hbond_fname.
| *group*: distance restraints
| *explevel*: expert

inter_rigid
~~~~~~~~~~~

| *default*: 1.0
| *type*: float
| *title*: Scaling of intermolecular interactions
| *min*: 0
| *max*: 1
| *short description*: Scaling of intermolecular interactions
| *long description*: Scaling of intermolecular interactions. This allows in particular to scale down intermolecular interactions to reach buried sites (recommended value for this is 0.01). If scaled-down do note that the van der Waals intermolecular energy might be bad because of clashes. In that case it is best to also set the weight of the van der Waals energy term to 0 (w_vdw).
| *group*: sampling
| *explevel*: expert

kcm
~~~

| *default*: 1.0
| *type*: float
| *title*: Center of mass restraints force constant
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the center of mass restraints
| *long description*: Force constant applied to the center of mass restraints
| *group*: ab initio mode
| *explevel*: expert

kncs
~~~~

| *default*: 1.0
| *type*: float
| *title*: Force constant for non-crystallographic restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant for non-crystallographic restraints
| *long description*: Force constant for non-crystallographic restraints
| *group*: symmetry
| *explevel*: expert

ksurf
~~~~~

| *default*: 1.0
| *type*: float
| *title*: Surface contact restraints force constant
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the surface contact restraints.
| *long description*: Force constant applied to the surface contact restraints.
| *group*: ab initio mode
| *explevel*: expert

ksym
~~~~

| *default*: 10.0
| *type*: float
| *title*: Force constant for symmetry restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant for symmetry restraints
| *long description*: Force constant for symmetry restraints
| *group*: symmetry
| *explevel*: expert

ligand_param_fname
~~~~~~~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Custom ligand parameter file
| *short description*: Ligand parameter file in CNS format
| *long description*: Ligand parameter file in CNS format containing all force field parameters (bond, angles, dihedrals, impropers, van der waals) for any ligand not supported by default by HADDOCK
| *group*: force field
| *explevel*: expert

ligand_top_fname
~~~~~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Custom ligand topology file
| *short description*: Ligand topology file in CNS format
| *long description*: Ligand topology file in CNS format containing the ligand topologies (atoms, masses, charges, bond definitions...) for any ligand not supported by default by HADDOCK
| *group*: force field
| *explevel*: expert

mol_fix_origin_1
~~~~~~~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Fix molecule
| *short description*: Fixes the molecule in its original position.
| *long description*: Fixes the molecule in its original position.
| *group*: molecule
| *explevel*: expert

ncs_end1_1
~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first NCS segment
| *long description*: Residue number of last residue in the first NCS segment
| *group*: symmetry
| *explevel*: expert

ncs_end2_1
~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second NCS segment
| *long description*: Residue number of last residue in the second NCS segment
| *group*: symmetry
| *explevel*: expert

ncs_on
~~~~~~

| *default*: False
| *type*: boolean
| *title*: Non-crystallographic symmetry restraints
| *short description*: Non-crystallographic symmetry restraints to ensure two molecules will have the same conformation.
| *long description*: Non-crystallographic symmetry restraints to ensure two molecules will have the same conformation. This does not apply any symmetry between the two molecules but rather defines restraints such as the RMSD between those is 0.
| *group*: symmetry
| *explevel*: expert

ncs_seg1_1
~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first NCS segment
| *short description*: Segment ID of first NCS segment
| *long description*: Segment ID of first NCS segment
| *group*: symmetry
| *explevel*: expert

ncs_seg2_1
~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second NCS segment
| *short description*: Segment ID of second NCS segment
| *long description*: Segment ID of second NCS segment
| *group*: symmetry
| *explevel*: expert

ncs_sta1_1
~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first NCS segment
| *long description*: Residue number of first residue in the first NCS segment
| *group*: symmetry
| *explevel*: expert

ncs_sta2_1
~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second NCS segment
| *long description*: Residue number of first residue in the second NCS segment
| *group*: symmetry
| *explevel*: expert

npart
~~~~~

| *default*: 2
| *type*: integer
| *title*: Number partitions for ambiguous restraints
| *min*: 1
| *max*: 20
| *short description*: Number of sets into which to randomly partition the ambiguous restraints.
| *long description*: Number of sets into which to randomly partition the ambiguous restraints. The fraction of restraints randomly removed depends on the npart parameter which defines in how many sets the restraints should be randomly split. The first set will be removed. The fraction of randomly removed ambiguous restraints is thus 1/npart.
| *group*: distance restraints
| *explevel*: expert

nrair_1
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_10
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_11
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_12
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_13
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_14
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_15
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_16
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_17
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_18
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_19
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_2
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_20
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_3
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_4
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_5
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_6
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_7
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_8
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

nrair_9
~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of segments from which to pick random restraints
| *min*: 0
| *max*: 100
| *short description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints.
| *long description*: Defines the number of segments for this molecule from which to randomly define random interaction restraints. Only solvent accessible residues will be considered. See also the ranair parameter.
| *group*: ab initio mode
| *explevel*: expert

ntrials
~~~~~~~

| *default*: 5
| *type*: integer
| *title*: Number of internal docking trials
| *min*: 1
| *max*: 100
| *short description*: Number of internal docking trials. Only the best model will be written to disk.
| *long description*: Number of internal docking trials. HADDOCK will repeat the docking internally multiple times, ranking them internally and only writing the best model to disk.
| *group*: sampling
| *explevel*: expert

numc2sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of C2 symmetry restraints
| *min*: 0
| *max*: 40
| *short description*: Defines the number of C2 symmetry restraints.
| *long description*: Defines the number of C2 symmetry restraints. For each, a pair of segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

numc3sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of C3 symmetry restraints
| *min*: 0
| *max*: 10
| *short description*: Defines the number of C3 symmetry restraints.
| *long description*: Defines the number of C3 symmetry restraints. For each, three segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

numc4sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of C4 symmetry restraints
| *min*: 0
| *max*: 10
| *short description*: Defines the number of C4 symmetry restraints.
| *long description*: Defines the number of C4 symmetry restraints. For each, four segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

numc5sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of C5 symmetry restraints
| *min*: 0
| *max*: 10
| *short description*: Defines the number of C5 symmetry restraints.
| *long description*: Defines the number of C5 symmetry restraints. For each, five segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

numc6sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of C6 symmetry restraints
| *min*: 0
| *max*: 10
| *short description*: Defines the number of C6 symmetry restraints.
| *long description*: Defines the number of C6 symmetry restraints. For each, six segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

numncs
~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of non-crystallographic symmetry restraints
| *min*: 0
| *max*: 100
| *short description*: Number of non-crystallographic symmetry restraints (NCS).
| *long description*: Number of non-crystallographic symmetry restraints. For each pairs of segments will have to be defined. Note that those must contain exactly the same residues/atom combinations.
| *group*: symmetry
| *explevel*: expert

nums3sym
~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Number of S3 symmetry restraints
| *min*: 0
| *max*: 10
| *short description*: Defines the number of S3 symmetry restraints.
| *long description*: Defines the number of S3 symmetry restraints. For each, three segments on which the symmetry restraint is applied will have to be defined. Those must all have the same length.
| *group*: symmetry
| *explevel*: expert

previous_ambig
~~~~~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Boolean condition on the previous ambiguous distance restraints file
| *short description*: Boolean condition on the previous ambiguous distance restraints file. If true, use the the restraint information coming from the previous CNS module. If false, don't use previous information.
| *long description*: Boolean condition on the ambiguous distance restraints file. If true, use the restraint information coming from the previous CNS module, as long as an ambig_fname is not defined for the current module. If false, don't use previous information.
| *group*: distance restraints
| *explevel*: expert

rair_end_10_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_11_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_12_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_13_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_14_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_15_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_16_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_17_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_18_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_19_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_20_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_6_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_7_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_8_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_end_9_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Ending residue number
| *min*: -9999
| *max*: 9999
| *short description*: Ending residue number for segment from which to define random interaction restraints
| *long description*: Ending residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_10_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_11_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_12_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_13_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_14_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_15_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_16_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_17_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_18_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_19_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_20_1
~~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_4_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_5_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_6_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_7_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_8_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

rair_sta_9_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Starting residue number
| *min*: -9999
| *max*: 9999
| *short description*: Starting residue number for segment from which to define random interaction restraints
| *long description*: Starting residue number for segment from which to define random interaction restraints
| *group*: ab initio mode
| *explevel*: expert

ranair
~~~~~~

| *default*: False
| *type*: boolean
| *title*: Random interaction restraints
| *short description*: Ambiguous interaction restraints will be defined randomly from surface patches around solvent accessible residues.
| *long description*: When turned on, this option will automatically define ambigous interaction restraints between the various molecules from randomly selected surface patches from solvent accessible residues . This allows HADDOCK to operate in ab-initio mode. Note that this type of restraints can not be combined with any other distance restraints. By default the entire surface will be sampled, but it is possible to define per molecule segments from which the random restraints will be defined (see the nrair_X parameter).
| *group*: ab initio mode
| *explevel*: expert

randremoval
~~~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Random removal of ambiguous restraints
| *short description*: If set to true (default) this will cause the random removal of ambiguous restraints for each model generated.
| *long description*: If set to true (default) this will cause the random removal of ambiguous restraints for each model generated. The fraction of restraints randomly removed depends on the npart parameter which defines in how many sets the restraints should be randomly split. The first set will be removed. The fraction of randomly removed ambiguous restraints is thus 1/npart.
| *group*: distance restraints
| *explevel*: expert

rotate180
~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Sample 180-rotated solutions
| *short description*: If true, HADDOCK will rotate the molecule by 180 degree around an axis perpendicular to the interface.
| *long description*: This parameter controls the sampling of 180 degree rotated solutions. If set to true, HADDOCK will rotate the molecule by 180 degree around an axis perpendicular to the interface.
| *group*: sampling
| *explevel*: expert

s3sym_end1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the first S3 symmetry segment
| *long description*: Residue number of last residue in the first S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

s3sym_end2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the second S3 symmetry segment
| *long description*: Residue number of last residue in the second S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

s3sym_end3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of last residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of last residue in the third S3 symmetry segment
| *long description*: Residue number of last residue in the third S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

s3sym_seg1_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of first S3 segment
| *short description*: Segment ID of first S3 segment
| *long description*: Segment ID of first S3 segment
| *group*: symmetry
| *explevel*: expert

s3sym_seg2_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of second S3 segment
| *short description*: Segment ID of second S3 segment
| *long description*: Segment ID of second S3 segment
| *group*: symmetry
| *explevel*: expert

s3sym_seg3_1
~~~~~~~~~~~~

| *default*: ''
| *type*: string
| *title*: Segment ID of third S3 segment
| *short description*: Segment ID of third S3 segment
| *long description*: Segment ID of third S3 segment
| *group*: symmetry
| *explevel*: expert

s3sym_sta1_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the first S3 symmetry segment
| *long description*: Residue number of first residue in the first S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

s3sym_sta2_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the second S3 symmetry segment
| *long description*: Residue number of first residue in the second S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

s3sym_sta3_1
~~~~~~~~~~~~

| *default*: nan
| *type*: integer
| *title*: Residue number of first residue
| *min*: -9999
| *max*: 9999
| *short description*: Residue number of first residue in the third S3 symmetry segment
| *long description*: Residue number of first residue in the third S3 symmetry segment
| *group*: symmetry
| *explevel*: expert

surfrest
~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Surface contact restraints
| *short description*: Surface contact restraints between molecules
| *long description*: Surface contact restraints between molecules. These are defined as an ambiguous distance restraint between all CA,BB or N1 atoms of two molecules (for small ligands all atoms are considered). The upper limit is set to 7A (or 4.5A in case of small ligands). Note that this option is computationally more expensive than the center of mass restraints (see cmrest).
| *group*: ab initio mode
| *explevel*: expert

sym_on
~~~~~~

| *default*: False
| *type*: boolean
| *title*: Symmetry restraints
| *short description*: Enables symmetry restraints
| *long description*: Enables symmetry restraints. The symmetry type (C2,C3,C4,C5,C6,S3 supported) and the segments to which those apply must be defined. In addition a custom symmetry restraint file can be supplied (symrest_fname).
| *group*: symmetry
| *explevel*: expert

symtbl_fname
~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Custom symmetry restraints filename
| *short description*: Filename of the custom symmetry restraints file
| *long description*: Filename of the custom symmetry restraints file.
| *group*: symmetry
| *explevel*: expert

tolerance
~~~~~~~~~

| *default*: 0
| *type*: integer
| *title*: Failure tolerance percentage
| *min*: 0
| *max*: 99
| *short description*: Percentage of allowed failures for a module to successfully complete
| *long description*: Percentage of allowed failures for a module to successfully complete
| *group*: module
| *explevel*: expert

unambig_scale
~~~~~~~~~~~~~

| *default*: 50
| *type*: integer
| *title*: Force constant for unambiguous distance restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the distance restraints defined in unambig_fname.
| *long description*: Force constant applied to the distance restraints defined in unambig_fname.
| *group*: distance restraints
| *explevel*: expert

w_air
~~~~~

| *default*: 0.01
| *type*: float
| *title*: Weight of the distance restraint energy
| *min*: 0
| *max*: 9999
| *short description*: Weight of the distance restraints energy in the scoring function
| *long description*: Weight of the distance restraints energy in the scoring function. Note that this is different from the force constants used during the calculations.
| *group*: scoring
| *explevel*: expert

w_bsa
~~~~~

| *default*: -0.01
| *type*: float
| *title*: Weight of the buried surface area term
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the buried surface area term in the scoring function
| *long description*: Weight of the buried surface area (BSA) term in the scoring function. Note that the BSA is only used for scoring.
| *group*: scoring
| *explevel*: expert

w_cdih
~~~~~~

| *default*: 0.0
| *type*: float
| *title*: Weight of the dihedral angle restraint energy
| *min*: 0
| *max*: 9999
| *short description*: Weight of the dihedral angle restraints energy in the scoring function
| *long description*: Weight of the dihedral angle restraints energy in the scoring function. Note that this is different from the force constant used during the calculations.
| *group*: scoring
| *explevel*: expert

w_desolv
~~~~~~~~

| *default*: 1.0
| *type*: float
| *title*: Weight of the desolvation energy term
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the desolvation energy term in the scoring function
| *long description*: Weight of the desolvation energy term in the scoring function. Note that the desolvation energy is only used for scoring.
| *group*: scoring
| *explevel*: expert

w_dist
~~~~~~

| *default*: 0.01
| *type*: float
| *title*: Weight of the distance restraint energy
| *min*: 0
| *max*: 9999
| *short description*: Weight of the distance restraints energy in the scoring function
| *long description*: Weight of the distance restraints energy in the scoring function. Note that this is different from the force constants used during the calculations.
| *group*: scoring
| *explevel*: expert

w_elec
~~~~~~

| *default*: 1.0
| *type*: float
| *title*: Weight of the intermolecular electrostatic energy
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the intermolecular electrostatic energy in the scoring function
| *long description*: Weight of the intermolecular electrostatic energy in the scoring function. Note that this does not affect the electostatic energy during the rigidbody minimization.
| *group*: scoring
| *explevel*: expert

w_sym
~~~~~

| *default*: 0.1
| *type*: float
| *title*: Weight of the symmetry restraint energy
| *min*: 0
| *max*: 9999
| *short description*: Weight of the symmetry restraints energy in the scoring function
| *long description*: Weight of the symmetry restraints energy in the scoring function. Note that this is different from the force constant used during the calculations.
| *group*: scoring
| *explevel*: expert

w_vdw
~~~~~

| *default*: 0.01
| *type*: float
| *title*: Weight of the intermolecular van der Waals energy
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the intermolecular van der Waals energy in the scoring function
| *long description*: Weight of the intermolecular van der Waals energy in the scoring function. Note that this does not affect the van der Waals energy during the rigidbody minimization.
| *group*: scoring
| *explevel*: expert


Guru
````

iniseed
~~~~~~~

| *default*: 917
| *type*: integer
| *title*: Random seed
| *min*: 0
| *max*: 9999999999999999
| *short description*: Random seed used in CNS to initialize the random seed function
| *long description*: Random seed used in CNS to initialize the random seed function
| *group*: sampling
| *explevel*: guru

keepwater
~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Write water molecules to output file
| *short description*: Write water molecules if present to the output file.
| *long description*: Write water molecules if present to the output file.
| *group*: sampling
| *explevel*: guru

log_level
~~~~~~~~~

| *default*: 'quiet'
| *type*: string
| *title*: Log level verbosity for CNS
| *choices*: ['verbose', 'normal', 'quiet']
| *short description*: Set the log level verbosity for CNS
| *long description*: CNS, the computational engine used by HADDOCK can generate a lot of output messages. This parameter controls the verbosity of CNS (verbose, normal or quiet).
| *group*: module
| *explevel*: guru

rigidtrans
~~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Allow translation during EM
| *short description*: Enables translation during rigidbody energy minimization
| *long description*: Enables translation during rigidbody energy minimization. If set to false, only a rotational energy minimization will be performed.
| *group*: sampling
| *explevel*: guru

